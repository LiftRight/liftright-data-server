---
dist: focal
language: rust
cache: cargo
rust:
  - 1.45.2

services:
  - docker

before_install: |
  LATEST_KUBE_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) &&
  curl -LO "https://storage.googleapis.com/kubernetes-release/release/${LATEST_KUBE_VERSION}/bin/linux/amd64/kubectl" && 
  chmod +x kubectl && mkdir -p ~/bin && mv kubectl ~/bin 

before_script:
- rustup component add rustfmt
- rustup component add clippy

# As a result of https://github.com/travis-ci/travis-ci/issues/1066, we run
# everything in one large command instead of multiple commands.
# In this way, the build stops immediately if one of the commands fails.
script: |
  cargo fmt --all -- --check &&
  cargo clippy -- -D warnings &&
  cargo build &&
  cargo test &&
  docker build -t alexlauni/liftright-data-server:$(git rev-parse --short ${TRAVIS_COMMIT}) \
    -t alexlauni/liftright-data-server:latest -f Dockerfile .

deploy:
  provider: script
  script:
    - docker login -u ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
    - docker push alexlauni/liftright-data-server
  on:
    branch: main

after_deploy: |
  export NEW_IMAGE="alexlauni/liftright-data-server:$(git rev-parse --short ${TRAVIS_COMMIT})" &&
  git clone git@github.com:LiftRight/lrds-deploy.git &&
  cd lrds-deploy/lrds/bases/backend/ &&
  ~/bin/kubectl patch --local \
    -o yaml \
    -f deployment.yaml \
    -p "spec:
          template:
            spec:
              containers:
                - name: lrds
                  image: ${NEW_IMAGE}" \
    > /tmp/newdeployment.yaml &&
   mv /tmp/newdeployment.yaml deployment.yaml &&
   git commit deployment.yaml -m "Update docker image to ${NEW_IMAGE}" &&
   git remote add origin-secure https://${GH_TOKEN}@github.com/lamalex/liftright-data-server > /dev/null 2>& &&
   git push origin-secure main
env:
  global:
    secure: GVZQccYg6Z/jDuDDWth9y/eaQ2WVjvUXAL84mhvLiIyrfFgRH2m4wbZsXEzpwBWWcABPofauT9NWZmrn6wjxVX1JjKnZtz87MckIr2mURryOu9kY9d1pe4RNCKprj7Abia3NdoHpahv8IOR/jaEgHePAS2rjRC7feWdQYfwqqAFXuAVAMsJb8omiKTJCVI4EITpiHhzSIW/SuDFD0o6COPTmECCsw3PabL3EfWhSegavQQFjus4lbv3/kHTTnInEmGc5nxz9lEQWibo64TexgBJn8anffpPGa+sgd6YAU7hqfkjppeD7wGE+NkraG+N2pzVigbm1fCMsLiGVaDpvNDraaxhjfkhDzE4gMU4saxmdidkhYS4CCceBEv7t+0AB2ERbEkTq8yFMDi4JJE2nX4Z9/39GW4ABOJcIrDgz+HL9dG4AX0wJMj5njknTmnO/SqwxLyzczfcJjMo8ET7kNLYrSq3VL/gtW7rHyCxa+sPznSNIoDj2O2gql8EGh5BbAhchmc+NdybKyWlUEVSm2b0rwz0FzjxSmkgHYYx6evb894ug70t+I+cpRuA6JRml9VzmkikAMF+L/i6dWRPVSTQXRA13HwQm4jnIm5CGO/IRAoiRTYtLOemT6vrtzEgp7kLbkH/vjIwmVNjfJZZqgwttXihsHrIH9h/ALOP9mqE=
